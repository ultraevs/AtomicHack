definitions:
  model.CodeResponse:
    properties:
      code:
        type: string
      message:
        type: string
    type: object
  model.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  model.LoginRequest:
    properties:
      id:
        type: integer
      password:
        type: string
    required:
    - id
    - password
    type: object
  model.Recognition:
    properties:
      date:
        type: string
      id:
        type: integer
      name:
        type: string
      photo:
        type: string
      result:
        type: string
      status:
        type: string
    type: object
info:
  contact: {}
  description: atomic.shmyaks.ru API
  title: AtomicHack Service API
  version: "1.0"
paths:
  /v1/addhistory:
    post:
      consumes:
      - application/json
      description: Добавляет запись в историю распознаваний юзера.
      produces:
      - application/json
      responses:
        "200":
          description: Запись добавлена
          schema:
            $ref: '#/definitions/model.CodeResponse'
        "400":
          description: Не удалось добавить запись
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      security:
      - CookieAuth: []
      summary: Добавить историю пользователя
      tags:
      - History
  /v1/gethistory:
    get:
      consumes:
      - application/json
      description: Предоставляет историю распознаваний юзера.
      produces:
      - application/json
      responses:
        "200":
          description: История получена
          schema:
            $ref: '#/definitions/model.CodeResponse'
        "400":
          description: Не удалось получить историю
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      security:
      - CookieAuth: []
      summary: Получить историю пользователя
      tags:
      - History
  /v1/getrecognitions:
    get:
      consumes:
      - application/json
      description: Предоставляет список всех распознаваний с возможностью фильтрации.
      parameters:
      - description: Имя пользователя для фильтрации
        in: query
        name: name
        type: string
      - description: Дата для фильтрации
        in: query
        name: date
        type: string
      - description: Статус для фильтрации
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Список распознаваний
          schema:
            items:
              $ref: '#/definitions/model.Recognition'
            type: array
        "400":
          description: Не удалось получить распознавания
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Получить все распознавания
      tags:
      - Admin
  /v1/login:
    post:
      consumes:
      - application/json
      description: Авторизует пользователя с предоставленным email и паролем.
      parameters:
      - description: Запрос на авторизацию пользователя
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Пользователь авторизован
          schema:
            $ref: '#/definitions/model.CodeResponse'
        "400":
          description: Не удалось авторизовать пользователя
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Логин
      tags:
      - Auth
  /v1/user_info:
    get:
      consumes:
      - application/json
      description: Предоставляет информацию юзера.
      produces:
      - application/json
      responses:
        "200":
          description: Информация получена
          schema:
            $ref: '#/definitions/model.CodeResponse'
        "400":
          description: Не удалось получить информацию
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      security:
      - CookieAuth: []
      summary: Получить инфо пользователя
      tags:
      - Profile
securityDefinitions:
  CookieAuth:
    in: cookie
    name: Authtoken
    type: apiKey
swagger: "2.0"
